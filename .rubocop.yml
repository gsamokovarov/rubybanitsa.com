AllCops:
  Exclude:
    - "db/**/*"
    - "bin/**/*"

# I can set other things than accessors.
Naming/AccessorMethodName:
  Enabled: false

# Don't complain on missing documentation for every class.
Style/Documentation:
  Enabled: false

# Let me write them typographic (â€“) dashes in comments.
Style/AsciiComments:
  Enabled: false

# Don't enforce Kernel#lambda.
Style/Lambda:
  Enabled: false

# Since module_function is a visibilty modifier, you can't have private
# singleton methods. E.g. in some cases, we _do_ need to use extend self.
Style/ModuleFunction:
  Enabled: false

# Let me use and/or precedence in conditions, please!
Style/AndOr:
  Enabled: false

# I think this results in uglier code, depending on the situation.
#
# Example:
#
#   if old_password or password
#     change_password(old_password, password)
#   end
#
# Versus:
#
#   change_password(old_password, password) if old_password or password
#
# It depends, but if I have a complex condition or a longer line, I prefer the
# more explicit if condition.
Style/IfUnlessModifier:
  Enabled: false

# Recently, I tend to prefer the named boolean operators. Yeah, they do have
# different precedence, but still.
Style/Not:
  Enabled: false

# I don't think this results in better code. We're flatting it out, while it is
# really nested. Why hide that?
Style/GuardClause:
  Enabled: false

Style/StabbyLambdaParentheses:
  Enabled: false

# Some of our admin code is generated by administrate. I don't wanna change
# this autogenerated code.
Style/TrailingCommaInHashLiteral:
  Enabled: false

# Some of our admin code is generated by administrate. I don't wanna change
# this autogenerated code.
Style/TrailingCommaInArguments:
  Enabled: false

# Some of our admin code is generated by administrate. I don't wanna change
# this autogenerated code.
Style/SymbolArray:
  Enabled: false

# Prefer double quotes because at this time I like them quite better.
Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/AccessModifierDeclarations:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

# Dogfood the no-parens love.
Style/MethodCallWithArgsParentheses:
  EnforcedStyle: omit_parentheses

# I do that a lot. Think it's okay.
Lint/AssignmentInCondition:
  Enabled: false

# I think it's safe to ignore the 80 chars limit.
Metrics/LineLength:
  Enabled: false

Metrics/AbcSize:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

# Sometimes life leaves you no choice. True story.
Lint/SuppressedException:
  Enabled: false

Layout/ParameterAlignment:
  EnforcedStyle: with_fixed_indentation

Layout/DefEndAlignment:
  EnforcedStyleAlignWith: start_of_line

Layout/SpaceInLambdaLiteral:
  Enabled: false
