server {
  listen 80;
  rewrite ^(.*) https://$host$1 permanent;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/<%= scope.lookupvar('::fqdn') %>/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/<%= scope.lookupvar('::fqdn') %>/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  # See https://weakdh.org/sysadmin.html for the ciphers configuration.
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/ssl/dhparams.pem;

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1h;

  # HSTS s a security feature that lets a web site tell browsers that it should
  # only be communicated with using HTTPS, instead of using HTTP. See
  # https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html.
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";
  add_header X-Frame-Options "DENY";

  server_name <%= Array(@server_name).join(' ') %>;
  root <%= @root %>/current/public;

  access_log <%= @root %>/shared/log/nginx.access.log;
  error_log <%= @root %>/shared/log/nginx.error.log info;

  keepalive_timeout 5;

  gzip            on;
  gzip_min_length 1000;
  gzip_proxied    expired no-cache no-store private auth;
  gzip_types      text/plain text/css text/js text/html text/javascript application/javascript application/x-javascript application/json image/svg+xml;

  # HTML5 Boilerplate Configurations.

  # Force the latest IE version
  add_header "X-UA-Compatible" "IE=Edge";

  # This tells Nginx to cache open file handles, "not found" errors, metadata
  # about files and their permissions, etc.
  open_file_cache          max=1000 inactive=20s;
  open_file_cache_valid    30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors   on;

  # Caching assets.

  location ~* \.(?:manifest|html?|json)$ {
    expires -1;
  }

  location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz)$ {
    expires max;
    access_log off;
    add_header Cache-Control "public";
  }

  location /app/ {
    try_files $uri $uri/ /app/index.html;
  }

  # Error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @root %>/public;
  }

  location / {
    if (-f $request_filename) {
      break;
    }

    if (-f $request_filename/index.html) {
      rewrite (.*) $1/index.html break;
    }

    if (-f $request_filename.html) {
      rewrite (.*) $1.html break;
    }

    # Buffer larger messages.
    client_max_body_size    5m;
    client_body_buffer_size 100k;

    # So nginx can build optimal proxy headers hash.
    proxy_headers_hash_max_size    1024;
    proxy_headers_hash_bucket_size 128;

    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto "https";
    proxy_set_header X-Forwarded-For "https";

    proxy_pass http://unix://<%= @root %>/shared/tmp/pids/puma.sock;

    break;
  }
}
